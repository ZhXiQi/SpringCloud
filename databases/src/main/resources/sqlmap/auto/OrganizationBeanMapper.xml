<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.core.dao.auto.OrganizationBeanMapper">
  <resultMap id="BaseResultMap" type="com.springboot.core.bean.auto.OrganizationBean">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="card_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="bank_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="bank_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="chain_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="org_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="org_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account_json" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, address, card_num, bank_name, bank_money, chain_money, 
    org_name, org_desc, account_json
  </sql>
  <select id="selectByExample" parameterType="com.springboot.core.bean.auto.OrganizationBeanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.springboot.core.bean.auto.OrganizationBeanExample">
    delete from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.springboot.core.bean.auto.OrganizationBean">
    insert into organization
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankMoney != null">
        bank_money,
      </if>
      <if test="chainMoney != null">
        chain_money,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="orgDesc != null">
        org_desc,
      </if>
      <if test="accountJson != null">
        account_json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankMoney != null">
        #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="chainMoney != null">
        #{chainMoney,jdbcType=DECIMAL},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgDesc != null">
        #{orgDesc,jdbcType=VARCHAR},
      </if>
      <if test="accountJson != null">
        #{accountJson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.core.bean.auto.OrganizationBeanExample" resultType="java.lang.Long">
    select count(*) from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update organization
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNum != null">
        card_num = #{record.cardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankMoney != null">
        bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.chainMoney != null">
        chain_money = #{record.chainMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.orgName != null">
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgDesc != null">
        org_desc = #{record.orgDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.accountJson != null">
        account_json = #{record.accountJson,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update organization
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      card_num = #{record.cardNum,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      chain_money = #{record.chainMoney,jdbcType=DECIMAL},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      org_desc = #{record.orgDesc,jdbcType=VARCHAR},
      account_json = #{record.accountJson,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.core.bean.auto.OrganizationBean">
    update organization
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankMoney != null">
        bank_money = #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="chainMoney != null">
        chain_money = #{chainMoney,jdbcType=DECIMAL},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgDesc != null">
        org_desc = #{orgDesc,jdbcType=VARCHAR},
      </if>
      <if test="accountJson != null">
        account_json = #{accountJson,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>