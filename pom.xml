<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>learning</groupId>
    <artifactId>SpringCloud</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>service</module>
        <module>client</module>
        <module>ribbon</module>
        <module>feign</module>
        <module>zuul</module>
        <module>config</module>
        <module>databases</module>
        <module>algorithm</module>
        <module>database-hibernate</module>
    </modules>

    <name>springcloud-parent</name>
    <description>parent</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
    </parent>

    <dependencies>
        <!-- web支持：1.web mvc；2.restful；3.jackjson支持；4.aop ...... -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--
                <version></version>
                由于上面指定了parent(Spring Boot)，所以不需要手动导Spring相关的版本号
             -->
        </dependency>

        <!--tomcat的支持
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        -->

<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-context</artifactId>-->
<!--            <version>2.0.0.RELEASE</version>-->
<!--        </dependency>-->
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.RELEASE</version>
                <!--
                上面版本的 zuul 会和 springboot有bean冲突，改成下面的就好了
                SpringBoot 和 SpringCloud 的版本对应比较严格，很多问题可能是版本导致的
                -->
<!--                <version>Greenwich.RELEASE</version>-->
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.16</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

<!--
    <build>
        <plugins>
            &lt;!&ndash; 纯maven项目，打全依赖包（项目使用的依赖也打包进jar包） &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    &lt;!&ndash; get all project dependencies &ndash;&gt;
                    <descriptorRefs>
                        &lt;!&ndash; 打出来的全依赖包带的后缀 &ndash;&gt;
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    &lt;!&ndash; MainClass in mainfest make a executable jar &ndash;&gt;
                    <archive>
                        <manifest>
                            &lt;!&ndash; 设置主类 &ndash;&gt;
                            <mainClass>util.Microseer</mainClass>
                        </manifest>
                    </archive>

                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        &lt;!&ndash; bind to the packaging phase &ndash;&gt;
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
-->

</project>